#!/bin/bash

APP_ROOT=$(cd $(dirname $0)/..; pwd);
VAR_DATA=$APP_ROOT/var/data
VAR_LOG=$APP_ROOT/var/log
LOG4J=file://${APP_ROOT}/etc/log4j.properties
LOG_PATH=${APP_ROOT}/var/log
SERVICE_NAME=$(basename $APP_ROOT);


CLASSPATH=`cat $APP_ROOT/lib/build.properties | grep classpath | tr '=' ' ' | awk '{ print $2 }' | sed 's/\\\\//g'`
DEPLOYABLE_ARTIFACT=`cat $APP_ROOT/lib/build.properties | grep deployable.artifact | tr '=' ' ' | awk '{ print $2 }'`
JAVA_MAIN=`cat $APP_ROOT/lib/build.properties | grep "java.main" | tr '=' ' ' | awk '{ print $2 }'`

JMX_PORT=`cat $APP_ROOT/config/instance.properties | grep RoutableDeployableConfig_default_jmxPort | tr '=' ' ' | awk '{ print $2 }'`
DEBUG_PORT=`cat $APP_ROOT/config/instance.properties | grep RoutableDeployableConfig_default_debugPort | tr '=' ' ' | awk '{ print $2 }'`

JAVA_XMX=`cat $APP_ROOT/config/config.properties | grep JavaStartupConfiguration_default_xmx | tr '=' ' ' | awk '{ print $2 }'`
JAVA_XMS=`cat $APP_ROOT/config/config.properties | grep JavaStartupConfiguration_default_xms | tr '=' ' ' | awk '{ print $2 }'`


# is the service already running?
if ps -efwww | grep -v grep | grep "\-DserviceName="${SERVICE_NAME} > /dev/null
then
    echo "$SERVICE_NAME service running"
    exit 0
fi

echo "starting serviceNamed="$SERVICE_NAME

DATE_SUFFIX="-$(/bin/date +%Y-%m-%d_%H%M%S)"

# start java process
echo "java.classpath="${CLASSPATH}
echo "java.artifact="${DEPLOYABLE_ARTIFACT}
echo "java.main="${JAVA_MAIN}
echo "java.xmx="${JAVA_XMX}
echo "java.xms="${JAVA_XMS}


cd $APP_ROOT && nohup $JAVA_HOME/bin/java \
  -DserviceName=${SERVICE_NAME} \
  $JAVA_LIBRARY_PATH_OPTS \
  -cp ${DEPLOYABLE_ARTIFACT}:${CLASSPATH} \
  -Xms${JAVA_XMS}m \
  -Xmx${JAVA_XMX}m \
  -server -ea -XX:+HeapDumpOnOutOfMemoryError \
  -XX:+DisableExplicitGC -XX:+PrintTenuringDistribution -XX:+PrintGCDetails -XX:+PrintGCDateStamps \
  -Xloggc:${LOG_PATH}/gc${DATE_SUFFIX}.log -XX:OnOutOfMemoryError="${RUN_ON_OUT_OF_MEMORY}" \
  -Dcom.sun.management.jmxremote.port=${JMX_PORT} -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false \
  -Dlog4j.configuration=${LOG4J} -Dlog.dir=${LOG_PATH} -Dlog.name=service.log \
  -Xdebug -Xrunjdwp:transport=dt_socket,address=${DEBUG_PORT},server=y,suspend=n \
  ${JAVA_MAIN} config/config.properties config/instance.properties >> ${LOG_PATH}/stdout.log 2>&1 &

exit 0
